{
  "version": 4,
  "terraform_version": "1.1.0",
  "serial": 372,
  "lineage": "b870bd2d-6fbe-e024-57b6-c6dcf0b62b10",
  "outputs": {
    "elasticsearch_ip_addr": {
      "value": "3.87.108.31:9200",
      "type": "string"
    },
    "kibana_ip_addr": {
      "value": "54.227.99.18:5601",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "init_elasticsearch",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c7af46f2986f5fe434db0b5f22574e4fc800adc63e3c7b1b2f1337e9d944b4aa",
            "rendered": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: cluster1\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: node_0\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: 172.20.10.171\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "template": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: ${cluster_name}\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: ${node_name}\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: ${node}\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "vars": {
              "cluster_name": "cluster1",
              "node": "172.20.10.171",
              "node1": "172.20.10.171",
              "node2": "172.20.20.86",
              "node3": "172.20.30.46",
              "node_name": "node_0"
            }
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "fbd8271b7b0b05cdf423ca5a9c2d992e97004a4107296acc0bde0dd6674366f1",
            "rendered": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: cluster1\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: node_1\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: 172.20.20.86\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "template": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: ${cluster_name}\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: ${node_name}\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: ${node}\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "vars": {
              "cluster_name": "cluster1",
              "node": "172.20.20.86",
              "node1": "172.20.10.171",
              "node2": "172.20.20.86",
              "node3": "172.20.30.46",
              "node_name": "node_1"
            }
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f2009b7a9ff5e47deaf9e3cb70dbfcb7d123294c56eb6aeeef463adad4b9ef96",
            "rendered": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: cluster1\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: node_2\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: 172.20.30.46\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"172.20.10.171\", \"172.20.20.86\",\"172.20.30.46\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "template": "# ======================== Elasticsearch Configuration =========================\r\n#\r\n# NOTE: Elasticsearch comes with reasonable defaults for most settings.\r\n#       Before you set out to tweak and tune the configuration, make sure you\r\n#       understand what are you trying to accomplish and the consequences.\r\n#\r\n# The primary way of configuring a node is via this file. This template lists\r\n# the most important settings you may want to configure for a production cluster.\r\n#\r\n# Please consult the documentation for further information on configuration options:\r\n# https://www.elastic.co/guide/en/elasticsearch/reference/index.html\r\n#\r\n# ---------------------------------- Cluster -----------------------------------\r\n#\r\n# Use a descriptive name for your cluster:\r\n#\r\ncluster.name: ${cluster_name}\r\n#\r\n# ------------------------------------ Node ------------------------------------\r\n#\r\n# Use a descriptive name for the node:\r\n#\r\nnode.name: ${node_name}\r\n#\r\n# Add custom attributes to the node:\r\n#\r\n#node.attr.rack: r1\r\n#\r\n# ----------------------------------- Paths ------------------------------------\r\n#\r\n# Path to directory where to store the data (separate multiple locations by comma):\r\n#\r\npath.data: /var/lib/elasticsearch\r\n#\r\n# Path to log files:\r\n#\r\npath.logs: /var/log/elasticsearch\r\n#\r\n# ----------------------------------- Memory -----------------------------------\r\n#\r\n# Lock the memory on startup:\r\n#\r\n#bootstrap.memory_lock: true\r\n#\r\n# Make sure that the heap size is set to about half the memory available\r\n# on the system and that the owner of the process is allowed to use this\r\n# limit.\r\n#\r\n# Elasticsearch performs poorly when the system is swapping the memory.\r\n#\r\n# ---------------------------------- Network -----------------------------------\r\n#\r\n# Set the bind address to a specific IP (IPv4 or IPv6):\r\n#\r\nnetwork.host: ${node}\r\n#\r\n# Set a custom port for HTTP:\r\n#\r\n#http.port: 9200\r\n#\r\n# For more information, consult the network module documentation.\r\n#\r\n# --------------------------------- Discovery ----------------------------------\r\n#\r\n# Pass an initial list of hosts to perform discovery when this node is started:\r\n# The default list of hosts is [\"127.0.0.1\", \"[::1]\"]\r\n#\r\ndiscovery.seed_hosts: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# Bootstrap the cluster using an initial set of master-eligible nodes:\r\n#\r\ncluster.initial_master_nodes: [\"${node1}\", \"${node2}\",\"${node3}\"]\r\n#\r\n# For more information, consult the discovery and cluster formation module documentation.\r\n#\r\n# ---------------------------------- Gateway -----------------------------------\r\n#\r\n# Block initial recovery after a full cluster restart until N nodes are started:\r\n#\r\n#gateway.recover_after_nodes: 3\r\n#\r\n# For more information, consult the gateway module documentation.\r\n#\r\n# ---------------------------------- Various -----------------------------------\r\n#\r\n# Require explicit names when deleting indices:\r\n#\r\n#action.destructive_requires_name: true",
            "vars": {
              "cluster_name": "cluster1",
              "node": "172.20.30.46",
              "node1": "172.20.10.171",
              "node2": "172.20.20.86",
              "node3": "172.20.30.46",
              "node_name": "node_2"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "init_kibana",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9312571befbbef5945fa274705113b1ac59a7b01e8e7a5644af5592f2c2e6efd",
            "rendered": "# Kibana is served by a back end server. This setting specifies the port to use.\r\n#server.port: 5601\r\n\r\n# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.\r\n# The default is 'localhost', which usually means remote machines will not be able to connect.\r\n# To allow connections from remote users, set this parameter to a non-loopback address.\r\nserver.host: \"0.0.0.0\"\r\n\r\n# Enables you to specify a path to mount Kibana at if you are running behind a proxy.\r\n# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath\r\n# from requests it receives, and to prevent a deprecation warning at startup.\r\n# This setting cannot end in a slash.\r\n#server.basePath: \"\"\r\n\r\n# Specifies whether Kibana should rewrite requests that are prefixed with\r\n# `server.basePath` or require that they are rewritten by your reverse proxy.\r\n# This setting was effectively always `false` before Kibana 6.3 and will\r\n# default to `true` starting in Kibana 7.0.\r\n#server.rewriteBasePath: false\r\n\r\n# The maximum payload size in bytes for incoming server requests.\r\n#server.maxPayloadBytes: 1048576\r\n\r\n# The Kibana server's name.  This is used for display purposes.\r\nserver.name: \"kibana\"\r\n\r\n# The URLs of the Elasticsearch instances to use for all your queries.\r\nelasticsearch.hosts: [\"http://3.87.108.31:9200\"]\r\n\r\n# When this setting's value is true Kibana uses the hostname specified in the server.host\r\n# setting. When the value of this setting is false, Kibana uses the hostname of the host\r\n# that connects to this Kibana instance.\r\n#elasticsearch.preserveHost: true\r\n\r\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations and\r\n# dashboards. Kibana creates a new index if the index doesn't already exist.\r\n#kibana.index: \".kibana\"\r\n\r\n# The default application to load.\r\n#kibana.defaultAppId: \"home\"\r\n\r\n# If your Elasticsearch is protected with basic authentication, these settings provide\r\n# the username and password that the Kibana server uses to perform maintenance on the Kibana\r\n# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which\r\n# is proxied through the Kibana server.\r\n#elasticsearch.username: \"kibana\"\r\n#elasticsearch.password: \"pass\"\r\n\r\n# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.\r\n# These settings enable SSL for outgoing requests from the Kibana server to the browser.\r\n#server.ssl.enabled: false\r\n#server.ssl.certificate: /path/to/your/server.crt\r\n#server.ssl.key: /path/to/your/server.key\r\n\r\n# Optional settings that provide the paths to the PEM-format SSL certificate and key files.\r\n# These files validate that your Elasticsearch backend uses the same key files.\r\n#elasticsearch.ssl.certificate: /path/to/your/client.crt\r\n#elasticsearch.ssl.key: /path/to/your/client.key\r\n\r\n# Optional setting that enables you to specify a path to the PEM file for the certificate\r\n# authority for your Elasticsearch instance.\r\n#elasticsearch.ssl.certificateAuthorities: [ \"/path/to/your/CA.pem\" ]\r\n\r\n# To disregard the validity of SSL certificates, change this setting's value to 'none'.\r\n#elasticsearch.ssl.verificationMode: full\r\n\r\n# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of\r\n# the elasticsearch.requestTimeout setting.\r\n#elasticsearch.pingTimeout: 1500\r\n\r\n# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value\r\n# must be a positive integer.\r\n#elasticsearch.requestTimeout: 30000\r\n\r\n# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side\r\n# headers, set this value to [] (an empty list).\r\n#elasticsearch.requestHeadersWhitelist: [ authorization ]\r\n\r\n# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten\r\n# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.\r\n#elasticsearch.customHeaders: {}\r\n\r\n# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.\r\n#elasticsearch.shardTimeout: 30000\r\n\r\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.\r\n#elasticsearch.startupTimeout: 5000\r\n\r\n# Logs queries sent to Elasticsearch. Requires logging.verbose set to true.\r\n#elasticsearch.logQueries: false\r\n\r\n# Specifies the path where Kibana creates the process ID file.\r\n#pid.file: /var/run/kibana.pid\r\n\r\n# Enables you specify a file where Kibana stores log output.\r\n#logging.dest: stdout\r\n\r\n# Set the value of this setting to true to suppress all logging output.\r\n#logging.silent: false\r\n\r\n# Set the value of this setting to true to suppress all logging output other than error messages.\r\n#logging.quiet: false\r\n\r\n# Set the value of this setting to true to log all events, including system usage information\r\n# and all requests.\r\n#logging.verbose: false\r\n\r\n# Set the interval in milliseconds to sample system and process performance\r\n# metrics. Minimum is 100ms. Defaults to 5000.\r\n#ops.interval: 5000\r\n\r\n# Specifies locale to be used for all localizable strings, dates and number formats.\r\n# Supported languages are the following: English - en , by default , Chinese - zh-CN .\r\n#i18n.locale: \"en\"",
            "template": "# Kibana is served by a back end server. This setting specifies the port to use.\r\n#server.port: 5601\r\n\r\n# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.\r\n# The default is 'localhost', which usually means remote machines will not be able to connect.\r\n# To allow connections from remote users, set this parameter to a non-loopback address.\r\nserver.host: \"0.0.0.0\"\r\n\r\n# Enables you to specify a path to mount Kibana at if you are running behind a proxy.\r\n# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath\r\n# from requests it receives, and to prevent a deprecation warning at startup.\r\n# This setting cannot end in a slash.\r\n#server.basePath: \"\"\r\n\r\n# Specifies whether Kibana should rewrite requests that are prefixed with\r\n# `server.basePath` or require that they are rewritten by your reverse proxy.\r\n# This setting was effectively always `false` before Kibana 6.3 and will\r\n# default to `true` starting in Kibana 7.0.\r\n#server.rewriteBasePath: false\r\n\r\n# The maximum payload size in bytes for incoming server requests.\r\n#server.maxPayloadBytes: 1048576\r\n\r\n# The Kibana server's name.  This is used for display purposes.\r\nserver.name: \"kibana\"\r\n\r\n# The URLs of the Elasticsearch instances to use for all your queries.\r\nelasticsearch.hosts: [\"http://${elasticsearch}:9200\"]\r\n\r\n# When this setting's value is true Kibana uses the hostname specified in the server.host\r\n# setting. When the value of this setting is false, Kibana uses the hostname of the host\r\n# that connects to this Kibana instance.\r\n#elasticsearch.preserveHost: true\r\n\r\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations and\r\n# dashboards. Kibana creates a new index if the index doesn't already exist.\r\n#kibana.index: \".kibana\"\r\n\r\n# The default application to load.\r\n#kibana.defaultAppId: \"home\"\r\n\r\n# If your Elasticsearch is protected with basic authentication, these settings provide\r\n# the username and password that the Kibana server uses to perform maintenance on the Kibana\r\n# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which\r\n# is proxied through the Kibana server.\r\n#elasticsearch.username: \"kibana\"\r\n#elasticsearch.password: \"pass\"\r\n\r\n# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.\r\n# These settings enable SSL for outgoing requests from the Kibana server to the browser.\r\n#server.ssl.enabled: false\r\n#server.ssl.certificate: /path/to/your/server.crt\r\n#server.ssl.key: /path/to/your/server.key\r\n\r\n# Optional settings that provide the paths to the PEM-format SSL certificate and key files.\r\n# These files validate that your Elasticsearch backend uses the same key files.\r\n#elasticsearch.ssl.certificate: /path/to/your/client.crt\r\n#elasticsearch.ssl.key: /path/to/your/client.key\r\n\r\n# Optional setting that enables you to specify a path to the PEM file for the certificate\r\n# authority for your Elasticsearch instance.\r\n#elasticsearch.ssl.certificateAuthorities: [ \"/path/to/your/CA.pem\" ]\r\n\r\n# To disregard the validity of SSL certificates, change this setting's value to 'none'.\r\n#elasticsearch.ssl.verificationMode: full\r\n\r\n# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of\r\n# the elasticsearch.requestTimeout setting.\r\n#elasticsearch.pingTimeout: 1500\r\n\r\n# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value\r\n# must be a positive integer.\r\n#elasticsearch.requestTimeout: 30000\r\n\r\n# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side\r\n# headers, set this value to [] (an empty list).\r\n#elasticsearch.requestHeadersWhitelist: [ authorization ]\r\n\r\n# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten\r\n# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.\r\n#elasticsearch.customHeaders: {}\r\n\r\n# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.\r\n#elasticsearch.shardTimeout: 30000\r\n\r\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.\r\n#elasticsearch.startupTimeout: 5000\r\n\r\n# Logs queries sent to Elasticsearch. Requires logging.verbose set to true.\r\n#elasticsearch.logQueries: false\r\n\r\n# Specifies the path where Kibana creates the process ID file.\r\n#pid.file: /var/run/kibana.pid\r\n\r\n# Enables you specify a file where Kibana stores log output.\r\n#logging.dest: stdout\r\n\r\n# Set the value of this setting to true to suppress all logging output.\r\n#logging.silent: false\r\n\r\n# Set the value of this setting to true to suppress all logging output other than error messages.\r\n#logging.quiet: false\r\n\r\n# Set the value of this setting to true to log all events, including system usage information\r\n# and all requests.\r\n#logging.verbose: false\r\n\r\n# Set the interval in milliseconds to sample system and process performance\r\n# metrics. Minimum is 100ms. Defaults to 5000.\r\n#ops.interval: 5000\r\n\r\n# Specifies locale to be used for all localizable strings, dates and number formats.\r\n# Supported languages are the following: English - en , by default , Chinese - zh-CN .\r\n#i18n.locale: \"en\"",
            "vars": {
              "elasticsearch": "3.87.108.31"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "init_logstash",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "066d0c385be121261ff9e67b108270c5c25c839e9e9d9bf678006c5d2a0b6301",
            "rendered": "# Sample Logstash configuration for creating a simple\r\n# Beats -\u003e Logstash -\u003e Elasticsearch pipeline.\r\n\r\ninput {\r\n  beats {\r\n    port =\u003e 5042\r\n  }\r\n}\r\n\r\noutput {\r\n  elasticsearch {\r\n    hosts =\u003e [\"http://3.87.108.31:9200\"]\r\n    index =\u003e \"logstash\"\r\n  }\r\n}",
            "template": "# Sample Logstash configuration for creating a simple\r\n# Beats -\u003e Logstash -\u003e Elasticsearch pipeline.\r\n\r\ninput {\r\n  beats {\r\n    port =\u003e 5042\r\n  }\r\n}\r\n\r\noutput {\r\n  elasticsearch {\r\n    hosts =\u003e [\"http://${elasticsearch}:9200\"]\r\n    index =\u003e \"logstash\"\r\n  }\r\n}",
            "vars": {
              "elasticsearch": "3.87.108.31"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "elastic_nodes",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-06464c19818666f89",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-06464c19818666f89",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-02d5b4cd599482500",
            "private_dns": "ip-172-20-10-171.ec2.internal",
            "private_ip": "172.20.10.171",
            "public_dns": "",
            "public_ip": "3.87.108.31",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0f9c8123f087d9c1c",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-02fe4a5a67fecf831",
            "tags": {
              "Name": "elasticsearch_0"
            },
            "tags_all": {
              "Name": "elasticsearch_0"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-041d277660cfa0185"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-03441bf54734fc242",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1b",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-03441bf54734fc242",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-04ea1da40f3757135",
            "private_dns": "ip-172-20-20-86.ec2.internal",
            "private_ip": "172.20.20.86",
            "public_dns": "",
            "public_ip": "3.88.55.101",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-069557d0566098f13",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-08aba5f0b94558931",
            "tags": {
              "Name": "elasticsearch_1"
            },
            "tags_all": {
              "Name": "elasticsearch_1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-041d277660cfa0185"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-0d428b7aeda56fc5e",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1c",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0d428b7aeda56fc5e",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-094a177a381130423",
            "private_dns": "ip-172-20-30-46.ec2.internal",
            "private_ip": "172.20.30.46",
            "public_dns": "",
            "public_ip": "44.192.88.222",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-01449f16502639f94",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-01ac19919606b581b",
            "tags": {
              "Name": "elasticsearch_2"
            },
            "tags_all": {
              "Name": "elasticsearch_2"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-041d277660cfa0185"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "filebeat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-0f1aef1ddffe9e13a",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0f1aef1ddffe9e13a",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-0a327d03f24e8b430",
            "private_dns": "ip-172-20-10-177.ec2.internal",
            "private_ip": "172.20.10.177",
            "public_dns": "",
            "public_ip": "54.160.161.100",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0d3aedb16050cf4e4",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-02fe4a5a67fecf831",
            "tags": {
              "Name": "filebeat"
            },
            "tags_all": {
              "Name": "filebeat"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0b708d52448cef74e"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_instance.logstash",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.filebeat_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.install_kibana",
            "null_resource.install_logstash",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "kibana",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-0f3defa5a2322169c",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0f3defa5a2322169c",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-0ca67daf215b8312e",
            "private_dns": "ip-172-20-10-199.ec2.internal",
            "private_ip": "172.20.10.199",
            "public_dns": "",
            "public_ip": "54.227.99.18",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-00007e59cd1160d45",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-02fe4a5a67fecf831",
            "tags": {
              "Name": "kibana"
            },
            "tags_all": {
              "Name": "kibana"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-094873d076e223a4a"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "logstash",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-0ed9277fb7eb570c9",
            "arn": "arn:aws:ec2:us-east-1:313330200302:instance/i-0df163feb2d34af0f",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0df163feb2d34af0f",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "elk_key",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-015902b50cbfd18a8",
            "private_dns": "ip-172-20-10-193.ec2.internal",
            "private_ip": "172.20.10.193",
            "public_dns": "",
            "public_ip": "34.207.243.238",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-09367dd9b557eba66",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-02fe4a5a67fecf831",
            "tags": {
              "Name": "logstash"
            },
            "tags_all": {
              "Name": "logstash"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0d3693b4787ea995c"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.install_kibana",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "elastic_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:internet-gateway/igw-0096133119c27d701",
            "id": "igw-0096133119c27d701",
            "owner_id": "313330200302",
            "tags": {
              "Name": "elastic_igw"
            },
            "tags_all": {
              "Name": "elastic_igw"
            },
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "elastic_ssh_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:key-pair/elk_key",
            "fingerprint": "08:07:38:68:c4:4e:4b:4f:75:d7:b2:6e:6b:3e:df:76",
            "id": "elk_key",
            "key_name": "elk_key",
            "key_name_prefix": "",
            "key_pair_id": "key-03e13c15520e5519a",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDZVvWD9xTtm6cjXZ6d+ASWxGhZRLq+cOaGhaY2zk7cFYB+/aprKD+PojffDt8F93csrZmZblgBGl5aDqxqMA75ITc/EPbUvHfoIViAgXUTCzuGGTRjw+Cq3a435+yvN8OEtzK/RDdrEnx+uhO3JC4z9aIU9PT6JcYRv09XGdkGUTOW+aXLL8qi7PCo3ZfsXi5mINQJqeGct17JZyNlm21lzk8/UJvJUOmekn4wY4IMqTLc/aovve05hvWV+qPfyLsXXKVCIuAByFq1XW5nJOySa6HXoJj0myrVer6fHUCubrShaEcVlASiU+ADWc5/29b85NmQYy3jTAo0rg9puB9IkXx3mnoVglGpS+pwTpDFp6h9WjLEhWkHU2LTbEQaiCAY+XjoscxLQjmFmyX8aNL/4HhP7O/o9ChAAIKG3Z6s/yzD4uLQ1U3s++ySGYP4uVE3GAg8Hzi6/GANFpSiezFU+ZNYt7xx2pmzgXq6TYuHECLAwzOSNCbD76VhzcQ3BXk= yaz14@DESKTOP-EHVPRA4",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_main_route_table_association",
      "name": "elastic_rt_main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "rtbassoc-0b3009162b7675151",
            "original_route_table_id": "rtb-0b90b26c7de423672",
            "route_table_id": "rtb-03226809e6ed25ee2",
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_internet_gateway.elastic_internet_gateway",
            "aws_route_table.elastic_rt",
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "elastic_rt",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:route-table/rtb-03226809e6ed25ee2",
            "id": "rtb-03226809e6ed25ee2",
            "owner_id": "313330200302",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0096133119c27d701",
                "instance_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "elastic_rt"
            },
            "tags_all": {
              "Name": "elastic_rt"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.elastic_internet_gateway",
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "elasticsearch_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:security-group/sg-041d277660cfa0185",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "egress rules",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-041d277660cfa0185",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 9200,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9300
              }
            ],
            "name": "terraform-20211213135216393100000001",
            "name_prefix": "terraform-",
            "owner_id": "313330200302",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "elasticsearch_sg"
            },
            "tags_all": {
              "Name": "elasticsearch_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "filebeat_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:security-group/sg-0b708d52448cef74e",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "egress rules",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0b708d52448cef74e",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "terraform-20211213135216459700000002",
            "name_prefix": "terraform-",
            "owner_id": "313330200302",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "filebeat_sg"
            },
            "tags_all": {
              "Name": "filebeat_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "kibana_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:security-group/sg-094873d076e223a4a",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "egress rules",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-094873d076e223a4a",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 5601,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 5601
              }
            ],
            "name": "terraform-20211213135216467200000003",
            "name_prefix": "terraform-",
            "owner_id": "313330200302",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "kibana_sg"
            },
            "tags_all": {
              "Name": "kibana_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "logstash_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:security-group/sg-0d3693b4787ea995c",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "egress rules",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0d3693b4787ea995c",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "ingress rules",
                "from_port": 5042,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 5042
              }
            ],
            "name": "terraform-20211213135216506100000004",
            "name_prefix": "terraform-",
            "owner_id": "313330200302",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "logstash_sg"
            },
            "tags_all": {
              "Name": "logstash_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "elastic_subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "us-east-1a",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:subnet/subnet-02fe4a5a67fecf831",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "172.20.10.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-02fe4a5a67fecf831",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "313330200302",
            "tags": {
              "Name": "elastic_subnet_us-east-1a"
            },
            "tags_all": {
              "Name": "elastic_subnet_us-east-1a"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        },
        {
          "index_key": "us-east-1b",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:subnet/subnet-08aba5f0b94558931",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "172.20.20.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-08aba5f0b94558931",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "313330200302",
            "tags": {
              "Name": "elastic_subnet_us-east-1b"
            },
            "tags_all": {
              "Name": "elastic_subnet_us-east-1b"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        },
        {
          "index_key": "us-east-1c",
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:subnet/subnet-01ac19919606b581b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1c",
            "availability_zone_id": "use1-az1",
            "cidr_block": "172.20.30.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-01ac19919606b581b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "313330200302",
            "tags": {
              "Name": "elastic_subnet_us-east-1c"
            },
            "tags_all": {
              "Name": "elastic_subnet_us-east-1c"
            },
            "timeouts": null,
            "vpc_id": "vpc-02ec22c5b3a811c9c"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.elastic_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "elastic_vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:313330200302:vpc/vpc-02ec22c5b3a811c9c",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "172.20.0.0/16",
            "default_network_acl_id": "acl-09998642dd499800b",
            "default_route_table_id": "rtb-0b90b26c7de423672",
            "default_security_group_id": "sg-07f5be4eeef5ce4c3",
            "dhcp_options_id": "dopt-b95cf0c3",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": false,
            "enable_dns_support": true,
            "id": "vpc-02ec22c5b3a811c9c",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_ipam_pool_id": null,
            "ipv6_netmask_length": null,
            "main_route_table_id": "rtb-0b90b26c7de423672",
            "owner_id": "313330200302",
            "tags": {
              "Name": "elastic_vpc"
            },
            "tags_all": {
              "Name": "elastic_vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "install_filebeat",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2466126189575846267",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.filebeat",
            "aws_instance.kibana",
            "aws_instance.logstash",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.filebeat_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.install_kibana",
            "null_resource.install_logstash",
            "null_resource.move_elasticsearch_file",
            "null_resource.move_filebeat_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "install_kibana",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4574943976157836860",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "install_logstash",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8649775268918175392",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_instance.logstash",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.install_kibana",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "move_elasticsearch_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3612745376012411757",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "2004427278052038500",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "6517403338998928194",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "move_filebeat_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5780504552256720194",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.filebeat",
            "aws_instance.kibana",
            "aws_instance.logstash",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.filebeat_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.install_kibana",
            "null_resource.install_logstash",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "move_kibana_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4903756223944538063",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "data.template_file.init_kibana",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "move_logstash_file",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3472200361701517053",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_instance.kibana",
            "aws_instance.logstash",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_security_group.kibana_sg",
            "aws_security_group.logstash_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "data.template_file.init_logstash",
            "null_resource.install_kibana",
            "null_resource.move_elasticsearch_file",
            "null_resource.start_es"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "start_es",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "4968620984634999845",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.move_elasticsearch_file"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "5106357777493420809",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.move_elasticsearch_file"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "2702829883460344782",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.elastic_nodes",
            "aws_key_pair.elastic_ssh_key",
            "aws_security_group.elasticsearch_sg",
            "aws_subnet.elastic_subnet",
            "aws_vpc.elastic_vpc",
            "data.template_file.init_elasticsearch",
            "null_resource.move_elasticsearch_file"
          ]
        }
      ]
    }
  ]
}
